name: Refresh to latest Docker images on NERSC Spin

on:
  repository_dispatch:
    types: [trigger-workflow-release-to-spin]

jobs:
  spin_rancher_nmdc_dev_restarts:
    runs-on: ubuntu-latest
    steps:
      - name: restart nmdc-dev/runtime-api
        uses: colbyhill21/Rancher-Action@1.1
        with: 
          args: '"rollout restart --namespace=nmdc-dev deployment/runtime-api"'
          token: ${{ secrets.RANCHER_TOKEN }}
          context: ${{ secrets.RANCHER_CONTEXT }}
          url: ${{ secrets.RANCHER_URL }}
      - name: restart nmdc-dev/dagster-dagit
        uses: colbyhill21/Rancher-Action@1.1
        with: 
          args: '"rollout restart --namespace=nmdc-dev deployment/dagster-dagit "'
          token: ${{ secrets.RANCHER_TOKEN }}
          context: ${{ secrets.RANCHER_CONTEXT }}
          url: ${{ secrets.RANCHER_URL }}
      - name: restart nmdc-dev/dagster-daemon
        uses: colbyhill21/Rancher-Action@1.1
        with: 
          args: '"rollout restart --namespace=nmdc-dev deployment/dagster-daemon"'
          token: ${{ secrets.RANCHER_TOKEN }}
          context: ${{ secrets.RANCHER_CONTEXT }}
          url: ${{ secrets.RANCHER_URL }}
  spin_rancher_nmdc_restarts:
    runs-on: ubuntu-latest
    steps:
      - name: restart nmdc/runtime-api
        uses: colbyhill21/Rancher-Action@1.1
        with:
          args: '"rollout restart --namespace=nmdc deployment/runtime-api"'
          token: ${{ secrets.RANCHER_TOKEN }}
          context: ${{ secrets.RANCHER_CONTEXT }}
          url: ${{ secrets.RANCHER_URL }}
      - name: restart nmdc/dagster-dagit
        uses: colbyhill21/Rancher-Action@1.1
        with:
          args: '"rollout restart --namespace=nmdc deployment/dagster-dagit "'
          token: ${{ secrets.RANCHER_TOKEN }}
          context: ${{ secrets.RANCHER_CONTEXT }}
          url: ${{ secrets.RANCHER_URL }}
      - name: restart nmdc/dagster-daemon
        uses: colbyhill21/Rancher-Action@1.1
        with:
          args: '"rollout restart --namespace=nmdc deployment/dagster-daemon"'
          token: ${{ secrets.RANCHER_TOKEN }}
          context: ${{ secrets.RANCHER_CONTEXT }}
          url: ${{ secrets.RANCHER_URL }}
