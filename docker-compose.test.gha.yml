services:

  # Postgres server used by Dagster.
  # Reference: https://docs.docker.com/reference/compose-file/services/#extends
  dagster-postgresql:
    extends: { file: docker-compose.base.yml, service: dagster-postgresql }
    volumes:
      - nmdc_runtime_test_postgres_data:/var/lib/postgresql/data

  # Web server that hosts the Dagster web UI.
  dagster-dagit:
    extends: { file: docker-compose.base.yml, service: dagster-dagit }
    env_file: .env.test

  # Dagster daemon.
  dagster-daemon:
    extends: { file: docker-compose.base.yml, service: dagster-daemon }
    env_file: .env.test

  # Uvicorn server hosting the FastAPI application.
  fastapi:
    extends: { file: docker-compose.base.yml, service: fastapi }
    env_file: .env.test
    depends_on:
      mongo: { condition: service_started }

  # MongoDB server used by the FastAPI application.
  #
  # Note: We use the Bitnami-maintained container image (instead of the community-maintained `mongo` one)
  #       because the former can be put into replica set mode more easily than the latter.
  #
  #       Our strategy for putting a container running the community-maintained `mongo` image into
  #       replica set mode does not seem to work on our Ubuntu-based GitHub Actions runner. Meanwhile,
  #       this Bitnami-maintained container image does not seem to work on our team members' M1 Macs.
  #
  mongo:
    image: bitnami/mongodb:8.0.4
    extends: { file: docker-compose.base.yml, service: mongo }
    volumes:
      - nmdc_runtime_test_mongo_data:/data/db
      - ./mongoKeyFile:/keyFile:ro
      - ~/nmdcdb-mongodump:/nmdc_dump:ro
      - ./tests/mongorestore-nmdc-testdb.sh:/mongorestore-nmdc-testdb.sh:ro
    environment:
      MONGODB_ROOT_USER: admin
      MONGODB_ROOT_PASSWORD: root
      MONGODB_REPLICA_SET_MODE: primary
      MONGODB_ADVERTISED_HOSTNAME: mongodb-primary
      MONGODB_REPLICA_SET_KEY: replicasetkey123

  # Test runner.
  test:
    # Prevent Docker Compose from starting this service automatically.
    # Reference: https://stackoverflow.com/a/65957695
    profiles:
      - donotstart
    build:
      context: .
      dockerfile: nmdc_runtime/Dockerfile
      target: test
    container_name: test
    env_file: .env.test
    depends_on:
      mongo: { condition: service_started }
      fastapi: { condition: service_started }
      dagster-daemon: { condition: service_started }
      dagster-dagit: { condition: service_started }
    volumes:
      - .:/code

volumes:
  nmdc_runtime_test_postgres_data:
    driver: local
  nmdc_runtime_test_mongo_data:
    driver: local