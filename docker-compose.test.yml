services:

  # Postgres server used by Dagster.
  #
  # Note: This service uses the same configuration as in the development stack,
  #       except it mounts a different volume.
  #
  dagster-postgresql:
    extends: { file: docker-compose.yml, service: dagster-postgresql }
    volumes:
      - nmdc_runtime_test_postgres_data:/var/lib/postgresql/data

  # Web server that hosts the Dagster web UI.
  #
  # Note: This service uses the same configuration as in the development stack,
  #       except its environment variables are sourced from a different file.
  #
  dagster-dagit:
    extends: { file: docker-compose.yml, service: dagster-dagit }
    env_file:
      - .env.test

  # Dagster daemon.
  #
  # Note: This service uses the same configuration as in the development stack,
  #       except its environment variables are sourced from a different file.
  #
  dagster-daemon:
    extends: { file: docker-compose.yml, service: dagster-daemon }
    env_file:
      - .env.test

  # Uvicorn server hosting the FastAPI application.
  #
  # Note: This service uses the same configuration as in the development stack,
  #       except it does not override the default command of the container image.
  #
  #       We failed to find documentation about "canceling out" the extended service's
  #       `command` value, so we are setting our own command value to an empty string here
  #       and crossing our fingers (we as in the author of this comment, who is a human dude).
  #       TODO: Update this comment after confirming whether the empty string cancels out the override.
  #
  fastapi:
    extends: { file: docker-compose.yml, service: fastapi }
    command: ""
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/version"]
      interval: 60s
      timeout: 5s
      retries: 3
      start_period: 60s

  # Short-lived MongoDB server used to initialize the one used by the FastAPI application.
  #
  # Note: This service uses the same configuration as in the development stack.
  #
  mongo-init:
    extends: { file: docker-compose.yml, service: mongo-init }

  # MongoDB server used by the FastAPI application.
  #
  # Note: This service uses the same configuration as in the development stack,
  #       except it mounts different volumes.
  #
  mongo:
    extends: { file: docker-compose.yml, service: mongo }
    volumes:
      - nmdc_runtime_test_mongo_data:/data/db
      - ~/nmdcdb-mongodump:/nmdc_dump:ro
      - ./tests/mongorestore-nmdc-testdb.sh:/mongorestore-nmdc-testdb.sh:ro
      - ./mongoKeyFile:/keyFile:ro

  # Test runner.
  test:
    # Prevent Docker Compose from starting this service automatically.
    # Reference: https://stackoverflow.com/a/65957695
    profiles:
      - donotstart
    build:
      context: .
      dockerfile: nmdc_runtime/Dockerfile
      target: test
    container_name: test
    env_file:
      - .env.test
    depends_on:
      mongo: { condition: service_started }
      fastapi: { condition: service_healthy }
      dagster-daemon: { condition: service_started }
      dagster-dagit: { condition: service_started }
    volumes:
      - .:/code

volumes:
  nmdc_runtime_test_postgres_data:
    driver: local
  nmdc_runtime_test_mongo_data:
    driver: local