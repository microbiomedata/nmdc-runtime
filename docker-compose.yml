services:

  # Postgres server used by Dagster.
  # Reference: https://docs.docker.com/reference/compose-file/services/#extends
  dagster-postgresql:
    extends: { file: docker-compose.base.yml, service: dagster-postgresql }
    volumes:
      - nmdc_runtime_postgres_data:/var/lib/postgresql/data

  # Web server that hosts the Dagster web UI.
  dagster-dagit:
    extends: { file: docker-compose.base.yml, service: dagster-dagit }
    env_file: .env

  # Dagster daemon.
  dagster-daemon:
    extends: { file: docker-compose.base.yml, service: dagster-daemon }
    env_file: .env

  # Uvicorn server hosting the FastAPI application.
  fastapi:
    extends: { file: docker-compose.base.yml, service: fastapi }
    command: ["uvicorn", "nmdc_runtime.api.main:app", "--reload", "--host", "0.0.0.0", "--port", "8000"]
    env_file: .env

  # Short-lived MongoDB server used to initialize the one used by the FastAPI application.
  mongo-init:
    extends: { file: docker-compose.base.yml, service: mongo-init }

  # MongoDB server used by the FastAPI application.
  # TODO: Why does this service, which is in the dev—not test—stack, mount a volume named `tests` — is that intentional?
  mongo:
    extends: { file: docker-compose.base.yml, service: mongo }
    volumes:
      - nmdc_runtime_mongo_data:/data/db
      - ./mongoKeyFile:/keyFile:ro
      - ./tests:/app_tests

volumes:
  nmdc_runtime_postgres_data:
    driver: local
  nmdc_runtime_mongo_data:
    driver: local

secrets:
  mongoKeyFile:
    file: ./mongoKeyFile